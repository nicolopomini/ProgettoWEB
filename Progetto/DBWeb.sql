DROP TABLE IF EXISTS User;
CREATE TABLE User
(
	userId INT UNSIGNED AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	surname VARCHAR(50) NOT NULL,
	email VARCHAR(50) NOT NULL UNIQUE,
	password VARCHAR(50) NOT NULL,
	address VARCHAR(100) NOT NULL,
	verificationCode CHAR(50) NOT NULL,
	PRIMARY KEY(userId)
);

DROP TABLE IF EXISTS Item;
CREATE TABLE Item
(
	itemId INT UNSIGNED AUTO_INCREMENT,
	name VARCHAR(50) NOT NULL,
	description VARCHAR(500) NOT NULL,
	category ENUM('electronics', 'home', 'books', 'sport', 'other') NOT NULL,
	price DECIMAL(10, 2) NOT NULL,
	shopId INT UNSIGNED NOT NULL,
	FOREIGN KEY(shopId) REFERENCES Shop(shopId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(itemId)
);

DROP TABLE IF EXISTS Purchase;
CREATE TABLE Purchase
(
	purchaseId INT UNSIGNED AUTO-INCREMENT,
	userId INT UNISIGNED NOT NULL,
	itemId INT UNISIGNED NOT NULL,
	quantity INT UNSIGNED NOT NULL,
	time TIMESTAMP NOT NULL,
	FOREIGN KEY(userId) REFERENCES User(userId) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(itemId) REFERENCES Item(itemId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(purchaseId)
);

DROP TABLE IF EXISTS ShopReview;
CREATE TABLE ShopReview
(
	shopReviewId INT UNSIGNED AUTO-INCREMENT,
	text VARCHAR(1000),
	userId INT UNISIGNED NOT NULL,
	shopId INT UNISIGNED NOT NULL,
	time TIMESTAMP NOT NULL,
	FOREIGN KEY(userId) REFERENCES User(userId) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(shopId) REFERENCES Shop(shopId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(shopReviewId)
);

DROP TABLE IF EXISTS ItemReview;
CREATE TABLE ItemReview
(
	itemReviewId INT UNSIGNED AUTO-INCREMENT,
	text VARCHAR(1000),
	userId INT UNISIGNED NOT NULL,
	itemId INT UNISIGNED NOT NULL,
	time TIMESTAMP NOT NULL,
	FOREIGN KEY(userId) REFERENCES User(userId) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY(itemId) REFERENCES Item(itemId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(shopReviewId)
);

DROP TABLE IF EXISTS Shop;
CREATE TABLE Shop
(
	shopId INT UNSIGNED AUTO_INCREMENT,
	website VARCHAR(100),
	address VARCHAR(200),
	lat DECIMAL(4, 4),
	lon DECIMAL(4, 4),
	openingHours VARCHAR(200),
	userId INT UNSIGNED NOT NULL,
	FOREIGN KEY(userId) REFERENCES User(userId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(shopId)
);

DROP TABLE IF EXISTS Picture;
CREATE TABLE Picture
(
	pictureId INT UNSIGNED AUTO_INCREMENT,
	path VARCHAR(200) NOT NULL,
	itemId INT UNSIGNED NOT NULL,
	FOREIGN KEY(itemId) REFERENCES Item(itemId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(pictureId)
);

DROP TABLE IF EXISTS Notification;
CREATE TABLE Notification
(
	notificationId INT UNSIGNED AUTO_INCREMENT,
	userId INT UNSIGNED NOT NULL,
	text VARCHAR(500) NOT NULL,
	seen BOOLEAN NOT NULL DEFAULT 0,
	FOREIGN KEY(userId) REFERENCES User(userId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(notificationId)
);

DROP TABLE IF EXISTS Complaint;
CREATE TABLE Complaint
(
	complaintId INT UNSIGNED AUTO_INCREMENT,
	purchaseId INT UNSIGNED NOT NULL,
	time TIMESTAMP NOT NULL,
	text VARCHAR(500) NOT NULL,
	reply VARCHAR(500),
	status ENUM('new', 'seen', 'rejected'),
	FOREIGN KEY(purchaseId) REFERENCES Purchase(purchaseId) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY(complaintId)
);